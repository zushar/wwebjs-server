### WhatsApp API Testing Guide
# This file contains all endpoints to interact with your WhatsApp API service
# The authentication flow is:
# 1. Create connection -> 2. Get pairing code -> 3. Enter code on device -> 4. Connection established

# Then select the environment using the REST Client plugin's environment selector
# (by default in the bottom right of VS Code when viewing a .http file)

@sessionId = user2
# @sessionId = {{phoneNumber}}
@clientId = user2
@timestamp = {{$timestamp}}

### ====== CONNECTION MANAGEMENT ======

### 1. Create a new WhatsApp connection
# First step: create a session with your phone number
POST {{baseUrl}}/whatsapp/sessions/{{sessionId}}
Content-Type: application/json

{
  "phoneNumber": "{{phoneNumber}}"
}

### 2. Get pairing code for a session
# After creating a connection, get the pairing code to enter on your device
GET {{baseUrl}}/whatsapp/sessions/{{sessionId}}/pairing-code

### 3. Check connection status (call repeatedly after pairing)
# After entering the pairing code on your device, check this endpoint
# until the status changes to "connected"
GET {{baseUrl}}/whatsapp/sessions/{{sessionId}}/status

### 4. Get all active sessions
# Useful to see all currently active WhatsApp connections
GET {{baseUrl}}/whatsapp/sessions

### 5. Close a connection
# Use this to properly log out and close a WhatsApp connection
DELETE {{baseUrl}}/whatsapp/sessions/{{sessionId}}

### ====== GROUP MANAGEMENT (SESSION-BASED) ======

### 6. Get all groups for a session
# Retrieve all WhatsApp groups for a specific session
GET {{baseUrl}}/whatsapp/sessions/{{sessionId}}/groups

### 7. Get all archived groups for a session
# Retrieve all archived WhatsApp groups for a specific session
GET {{baseUrl}}/whatsapp/sessions/{{sessionId}}/groups/archived

### 8. Get specific group by ID
# Retrieve details of a specific group by its ID
@groupId = 120363123456789012@g.us
GET {{baseUrl}}/whatsapp/sessions/{{sessionId}}/groups/{{groupId}}

### ====== GROUP OPERATIONS (PRD ENDPOINTS) ======

### 9. Delete all messages from all archived groups
# Delete all messages from every archived group
DELETE {{baseUrl}}/whatsapp/delete/archive/all?clientId={{clientId}}

### 10. Delete messages from specific groups
DELETE {{baseUrl}}/whatsapp/delete/group
Content-Type: application/json

{
  "clientId": "{{clientId}}",
  "groupIds": ["120363420498627074@g.us","120363314196426974@g.us"]
}

### 11. Send message to specific groups
# Send a message to multiple groups at once
POST {{baseUrl}}/whatsapp/sessions/{{sessionId}}/groups/messages
Content-Type: application/json

{
  "groupIds": ["120363420498627074@g.us","120363400771049095@g.us","120363400114178058@g.us","120363416493967616@g.us","120363417034692892@g.us","120363418900048815@g.us","120363403845617143@g.us","120363418941236327@g.us","120363417707754775@g.us","120363399307013398@g.us","120363399445195209@g.us","120363420793440399@g.us","120363401171145083@g.us","120363418682461875@g.us","120363414579841081@g.us"],
  "message": "Hello everyone! This is a test message sent at {{$datetime iso8601}}"
}

### ====== MESSAGING ======

### 12. Send a text message
# Basic text message - simplest form of message
POST {{baseUrl}}/whatsapp/sessions/{{sessionId}}/messages
Content-Type: application/json

{
  "to": "972542370954",
  "content": "Hello from WhatsApp Cluster! Current time: {{$datetime iso8601}}",
  "type": "text"
}
